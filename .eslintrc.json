{
  "root": true,
  "env": {
    "browser": true
  },
  "ignorePatterns": ["dist/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": ["@stylistic"],
      "rules": {
        "curly": "error",
        "eqeqeq": ["error", "always"],
        "padding-line-between-statements": [
          "error",
          { "blankLine": "always", "prev": "*", "next": "return" },
          { "blankLine": "always", "prev": "*", "next": "const" },
          { "blankLine": "always", "prev": "const", "next": "*" },
          { "blankLine": "any", "prev": "const", "next": "const" },
          { "blankLine": "any", "prev": "let", "next": "const" },
          { "blankLine": "any", "prev": "const", "next": "let" }
        ],
        "padded-blocks": ["error", { "classes": "never" }],
        "max-lines": ["error", { "max": 400 }],
        "no-console": "warn",
        "no-duplicate-imports": "error",
        "no-await-in-loop": "error",
        "no-unused-expressions": "off",
        "no-use-before-define": "off",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/consistent-indexed-object-style": ["error", "index-signature"],
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/consistent-type-exports": [
          "error",
          { "fixMixedExportsWithInlineTypeSpecifier": false }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          { "prefer": "type-imports", "fixStyle": "inline-type-imports" }
        ],
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          { "accessibility": "explicit" }
        ],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/method-signature-style": ["error", "method"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "variableLike",
            "format": ["camelCase"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          }
        ],
        "@typescript-eslint/no-array-delete": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-inferrable-types": [
          "error",
          { "ignoreParameters": true }
        ],
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/sort-type-constituents": "error",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrayDestructuring": false,
            "arrowParameter": true,
            "objectDestructuring": false,
            "parameter": true,
            "variableDeclarationIgnoreFunction": false
          }
        ],
        "@stylistic/array-bracket-newline": ["error", "consistent"],
        "@stylistic/array-bracket-spacing": "error",
        "@stylistic/arrow-parens": ["error", "always"],
        "@stylistic/arrow-spacing": "error",
        "@stylistic/block-spacing": "error",
        "@stylistic/brace-style": "error",
        "@stylistic/comma-dangle": ["error", "never"],
        "@stylistic/comma-spacing": [
          "error",
          { "before": false, "after": true }
        ],
        "@stylistic/comma-style": "error",
        "@stylistic/computed-property-spacing": "error",
        "@stylistic/key-spacing": "error",
        "@stylistic/keyword-spacing": "error",
        "@stylistic/member-delimiter-style": "error",
        "@stylistic/new-parens": "error",
        "@stylistic/no-mixed-operators": "error",
        "@stylistic/no-multi-spaces": "error",
        "@stylistic/no-multiple-empty-lines": [
          "error",
          { "max": 1, "maxEOF": 0, "maxBOF": 0 }
        ],
        "@stylistic/object-curly-spacing": ["error", "always"],
        "@stylistic/quotes": [
          "error",
          "double",
          { "avoidEscape": true }
        ],
        "@stylistic/semi": "error",
        "@stylistic/space-before-blocks": "error",
        "@stylistic/space-before-function-paren": [
          "error",
          { "anonymous": "always", "named": "never", "asyncArrow": "always" }
        ],
        "@stylistic/type-annotation-spacing": "error",
        "@typescript-eslint/unbound-method": ["off"],
        "@angular-eslint/template/no-interpolation-in-attributes": "warn"
      },
      "parserOptions": {
        "project": ["./tsconfig.eslint.json"],
        "tsconfigRootDir": "."
      }
    },
    {
      "files": ["*-routing.module.ts"],
      "rules": {
        "@typescript-eslint/typedef": "off"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/no-interpolation-in-attributes": "warn",
        "@angular-eslint/template/no-distracting-elements": "error",
        "@angular-eslint/template/no-any": "error",
        "@angular-eslint/template/no-positive-tabindex": "error",
        "@angular-eslint/template/elements-content": "off"
      }
    }
  ]
}
